// <auto-generated />
using System;
using Data_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250125205109_ChangeLog_Guid_nullableForEliminations")]
    partial class ChangeLog_Guid_nullableForEliminations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data_Access.Models.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("BookId");

                    b.ToTable("TableOfBooks");
                });

            modelBuilder.Entity("Data_Access.Models.ChangeLog", b =>
                {
                    b.Property<Guid>("ChangeLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ChangeLogId");

                    b.HasIndex("BookId");

                    b.ToTable("ChangeLogs");
                });

            modelBuilder.Entity("Data_Access.Models.LogError", b =>
                {
                    b.Property<Guid>("LogErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("LogErrorId");

                    b.ToTable("LogErrors");
                });

            modelBuilder.Entity("Data_Access.Models.ChangeLog", b =>
                {
                    b.HasOne("Data_Access.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
